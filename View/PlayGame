package View;

import java.awt.Color;

import Model.C;
import Model.Graphics;
import acm.graphics.GOval;
import acm.graphics.GRect;
import acm.io.IODialog;
import acm.program.*;
import acm.util.RandomGenerator;

public class PlayGame extends GraphicsProgram {
	RandomGenerator rgen = new RandomGenerator();
	public static GRect paddle = null;
	public static GOval ball = null;

	public void run() {
		setSize(C.WINDOW_WIDTH, C.WINDOW_HEIGHT);
		drawtheGame();
	}

	public void drawtheGame() {
		// Both still wrong size
		paddle = Graphics.drawPaddle((C.WINDOW_WIDTH / 2) - (C.PADDLE_WIDTH / 2),
				C.WINDOW_HEIGHT - (C.WINDOW_HEIGHT / 5));
		add(paddle);
		ball = Graphics.drawBall((C.WINDOW_WIDTH / 2), C.WINDOW_HEIGHT - (C.WINDOW_HEIGHT / 5) - C.BALL_RAD);
		ball.setColor(new Color(250, 0, 0));
		add(ball);
		int level = 0;// rgen.nextInt(0, 2);
		switch (level) {
		case (0):
			for (int i = 0; i < 10; i++) {
				for (int j = 0; j < 11; j++) {
					if (j % 3 == 0) {
					} else {

						int y = 20 + j * C.BRICK_HEIGHT;
						int x = i * C.BRICK_WIDTH;
						GRect ziegel = Graphics.drawBrick(x, y);

						ziegel.setFillColor(new Color(0, 255 / (j + 1), 0));
						add(ziegel);

					}
				}

			}
			break;

		case (1):
			// Map 2

		case (2):
			// Map 3

		default:
			throw new IllegalArgumentException("Something went srsly wrong with the Randomgenerator");
		}

	}

	public void play() {
		// Hier mit nem while loop das Spiel laufen lassen
	}

	private void gameOver() {
		IODialog gameOver = new IODialog();
		gameOver.print("You Lost!");
	}

}
